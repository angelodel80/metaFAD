<?xml version="1.0" encoding="utf-8"?>
<model:Model
    xmlns:glz="http://www.glizy.org/dtd/1.0/"
    xmlns:model="http://www.glizy.org/dtd/1.0/model/"
    model:tableName="archivi.models.UnitaDocumentaria"
    model:usePrefix="true"
    model:type="document"
    model:baseClass="metafad.common.models.ActiveRecordDocument">

    <model:Define>
        <model:Field name="fulltext" type="string" index="fulltext" onlyIndex="true" />
        <model:Field name="_denominazione" type="string" index="true" />
        <model:Field name="pageId" type="string" />
        <model:Field name="root" type="string" index="true"/>
        <model:Field name="isValid" type="int"/>
<model:Field validator="notempty" name="acronimoSistema" description="Acronimo di sistema" type="string" index="true"/>
<model:Field name="identificativo" description="Identificativo per l\'Unit&#xE0; documentaria" type="string"/>
<model:Field name="codiceIdentificativoSistema" description="Codice identificativo di sistema" type="string"/>
<model:Field name="altriCodiciIdentificativi" description="Altri codici identificativi" type="object" readFormat="false"/>
<model:Field name="codiceIdentificativoPrecedente" description="Codice identificativo precedente" type="object" readFormat="false"/>
<model:Field validator="notempty" name="livelloDiDescrizione" description="Livello di descrizione" type="string"/>
<model:Field name="externalID" description="ID importazione" type="string" index="true"/>
<model:Field validator="notempty" name="parent" description="Livello superiore" type="array_id" index="true"/>
<model:Field name="tipo" description="Tipologia" type="string"/>
<model:Field name="tipoSpecifico" description="Tracciati specifici" type="string"/>
<model:Field name="audiovisivo_TipologiaSpecifica" description="Tipologia specifica" type="string"/>
<model:Field name="audiovisivo_tecnica" description="Tecnica" type="string"/>
<model:Field name="audiovisivo_specificazione" description="Specificazione (se altro)" type="string"/>
<model:Field name="audiovisivo_durata" description="Durata" type="string"/>
<model:Field name="audiovisivo_indicatoreColore" description="Indicatore di colore" type="string"/>
<model:Field name="audiovisivo_formato" description="Formato" type="string"/>
<model:Field name="cartografia_tipologiaSpecifica" description="Tipologia specifica" type="string"/>
<model:Field name="cartografia_specificazione" description="Specificazione (se altro)" type="string"/>
<model:Field name="cartografia_altezza" description="Altezza" type="string"/>
<model:Field name="cartografia_tecnica" description="Tecnica" type="string"/>
<model:Field name="cartografia_specificazioneTecnica" description="Specificazione (se altro)" type="string"/>
<model:Field name="cartografia_indicatoreColore" description="Indicatore di colore" type="string"/>
<model:Field name="cartografia_numeroTavola" description="Numero tavola" type="string"/>
<model:Field name="cartografia_tipoScala" description="Tipo scala" type="string"/>
<model:Field name="cartografia_specificazioneScala" description="Specificazione (se altro)" type="string"/>
<model:Field name="cartografia_scale" description="Scala" type="string"/>
<model:Field name="cartografia_luogo_stato" description="Stato" type="string"/>
<model:Field name="cartografia_luogo_comuneAttuale" description="Comune Attuale" type="string"/>
<model:Field name="cartografia_luogo_denominazioneCoeva" description="Denominazione coeva" type="string"/>
<model:Field name="corrispondenza_tipologiaSpecifica" description="Tipologia specifica" type="string"/>
<model:Field name="corrispondenza_viaggiata" description="Viaggiata" type=""/>
<model:Field name="foto_tipologiaSpecifica" description="Tipologia specifica" type="string"/>
<model:Field name="foto_altezza" description="Altezza" type="string"/>
<model:Field name="foto_larghezza" description="Larghezza" type="string"/>
<model:Field name="foto_tecnica" description="Tecnica" type="string"/>
<model:Field name="foto_indicatoreColore" description="Indicatore di colore" type="string"/>
<model:Field name="foto_luogo_stato" description="Stato" type="string"/>
<model:Field name="foto_luogo_comuneAttuale" description="Comune Attuale" type="string"/>
<model:Field name="foto_luogo_denominazioneCoeva" description="Denominazione coeva" type="string"/>
<model:Field name="grafica_tipologiaSpecifica" description="Tipologia specifica" type="string"/>
<model:Field name="grafica_specificazione" description="Specificazione (se altro)" type="string"/>
<model:Field name="grafica_altezza" description="Altezza" type="string"/>
<model:Field name="grafica_larghezza" description="Larghezza" type="string"/>
<model:Field name="grafica_materia" description="Materia" type="object" readFormat="false"/>
<model:Field name="grafica_tecnica" description="Tecnica" type="object" readFormat="false"/>
<model:Field name="grafica_indicatoreColore" description="Indicatore di colore" type="string"/>
<model:Field name="grafica_luogo_stato" description="Stato" type="string"/>
<model:Field name="grafica_luogo_comuneAttuale" description="Comune Attuale" type="string"/>
<model:Field name="grafica_luogo_denominazioneCoeva" description="Denominazione coeva" type="string"/>
<model:Field name="manoscritto_tipologiaSpecifica" description="Tipologia specifica" type="string"/>
<model:Field name="incipit" description="Incipit" type="text"/>
<model:Field name="explicit" description="Explicit" type="text"/>
<model:Field name="pergamena_altezza" description="Altezza" type="string"/>
<model:Field name="pergamena_larghezza" description="Larghezza" type="string"/>
<model:Field name="pergamena_rpt_tipoScrittura" description="Tipo di scrittura" type="object" readFormat="false"/>
<model:Field name="pergamena_sigillo" description="Sigillo" type="string"/>
<model:Field name="pergamena_materialeSigillo" description="Materiale sigillo" type="string"/>
<model:Field name="pergamena_materialeS_specificazione" description="Specificazione (se altro)" type="string"/>
<model:Field name="forma" description="Forma" type="string"/>
<model:Field name="numeroOrdinamentoProvvisorio" description="Numero di ordinamento provvisorio" type="string"/>
<model:Field name="numeroOrdinamentoDefinitivo" description="Numero di ordinamento definitivo" type="string"/>
<model:Field name="segnaturaAttuale" description="Segnatura attuale" type="string"/>
<model:Field name="segnaturaPrecedente" description="Segnatura precedente" type="object" readFormat="false"/>
<model:Field name="codiceDiClassificazione" description="Codice di classificazione" type="string"/>
<model:Field name="denominazione" description="Titolo originale" type="string"/>
<model:Field name="integrazioneTitolo" description="Integrazione al titolo" type="string"/>
<model:Field name="titoloAttribuito" description="Titolo attribuito" type="string"/>
<model:Field name="autoreResponsabile" description="Autore/Responsabile" type="object" readFormat="false"/>
<model:Field name="cronologia" description="Estremi cronologici" type="object" readFormat="false"/>
<model:Field name="dataTopica" description="Data Topica" type="string"/>
<model:Field name="descrizioneFisica_tipologia" description="Tipologia" type="string"/>
<model:Field name="descrizioneFisica_supporto" description="Supporto" type="string"/>
<model:Field name="consistenza" description="Consistenza" type="object" readFormat="false"/>
<model:Field name="integrazioneDescrizione" description="Integrazione alla descrizione" type="text"/>
<model:Field name="visualizzazioneConsistenza" description="Visualizzazione della consistenza" type="text"/>
<model:Field name="contestoProvenienza_descrizione" description="Descrizione / Abstract / Regesto" type="text"/>
<model:Field name="contestoProvenienza_linguaTesto" description="Lingua del testo" type="string"/>
<model:Field name="condizioniAccessoRiproduzione" description="Condizioni di accesso e riproduzione" type="text"/>
<model:Field name="antroponimi" description="Antroponimi" type="object" readFormat="false"/>
<model:Field name="enti" description="Enti" type="object" readFormat="false"/>
<model:Field name="toponimi" description="Toponimi" type="object" readFormat="false"/>
<model:Field name="descrittori" description="Descrittori" type="object" readFormat="false"/>
<model:Field name="documentazioneArchivioCollegata" description="Documentazione d\'archivio collegata" type="object" readFormat="false"/>
<model:Field name="riferimentiBibliografici" description="Riferimenti bibliografici" type="object" readFormat="false"/>
<model:Field name="fontiArchivistiche" description="Fonti archivistiche" type="object" readFormat="false"/>
<model:Field name="riferimentiWeb" description="Riferimenti web" type="object" readFormat="false"/>
<model:Field name="linguaDescrizioneRecord" description="Lingua di descrizione del record" type="string"/>
<model:Field name="compilazione" description="Compilazione" type="object" readFormat="false"/>
<model:Field name="osservazioni" description="Osservazioni" type="text"/>
<model:Field name="ecommerceLicenses" description="Opzioni ecommerce" type="string"/>
<model:Field name="visibility" description="Visibilit&#xE0; FE" type="string"/>
<model:Field name="linkedStruMag" description="Metadato strutturale collegato" type="array_id" index="true"/>
<model:Field name="mediaCollegati" description="Media Collegati" type="string"/>
<model:Field name="linkedMediaEcommerce" description="Ecommerce" type="string"/>

    </model:Define>

    <model:Script parent="model"><![CDATA[
    public function publish($values = null, $comment='', $forceNew=false)
    {
        $r = parent::publish($values, $comment, $forceNew);
        return $r;
    }

    public function save($values=null, $forceNew=false, $status='DRAFT', $comment='')
    {
        $isNew = $this->isNew();
        $r = parent::save($values, $forceNew, $status, $comment);

        return $r;
    }

    public function getSolrDocument()
    {
        $solrModel = array (
            '__id' => 'id',
            'document' => 'doc_store',
            '__model' => 'document_type_t',
            'updateDateTime' => 'update_at_s',
            '_hasDigital' => 'digitale_i',
            'isValid' => 'isValid_i',
            'acronimoSistema' => 'acronimoSistema_s',
            'identificativo' => 'identificativo_s',
            'livelloDiDescrizione' => 'livelloDiDescrizione_s',
            'externalID' => 'externalID_s',
            '@parent[!]->id' => 'parent_i',
            '@denominazione|titoloAttribuito' => 'denominazione_s',
            '@cronologia->estremoCronologicoTestuale' => 'cronologia_s',
            'visibility' => 'visibility_s',
            'tipo' => 'tipo_s',
            '_parents' => 'parents_ss',
            '_parentsIds' => 'parents_is',
            '_complessoAppartenenza' => 'complessoAppartenenza_s',
            '@cronologia[!]->estremoRemoto_codificaData:onlyYear' => 'estremoRemoto_i',
            '@cronologia[!]->estremoRecente_codificaData:onlyYear' => 'estremoRecente_i',
            '@cronologia[!]->estremoRemoto_secolo:romanToInteger' => 'estremoRemotoSecolo_i',
            '@cronologia[!]->estremoRecente_secolo:romanToInteger' => 'estremoRecenteSecolo_i',
            '@autoreResponsabile->autoreDenominazione->text,autoreResponsabile->autoreCognomeNome->text[]' => 'autoreResponsabile_ss',
            '@autoreResponsabile->ruolo[]' => 'ruolo_ss',
            'contestoProvenienza_descrizione' => 'descrizione_ss',
            'dataTopica' => 'luogo_s',
            'contestoProvenienza_linguaTesto' => 'lingua_s',
            '@antroponimi->intestazione->text[]' => 'antroponimi_ss',
            '@enti->intestazione->text[]' => 'enti_ss',
            '@toponimi->intestazione->text[]' => 'toponimi_ss',
            '@compilazione->compilazione_redattore[]' => 'redattore_ss',
            '@compilazione->compilazione_azione[]' => 'azione_ss',
);
        
        $solrModel = array_merge(parent::getSolrDocument(), $solrModel);

        return $solrModel;
    }

    public function getBeAdvancedSearchFields()
    {
        $searchFields = array (
  array (
    'type' => 'select',
    'label' => 'Livello di descrizione',
    'field' => 'livelloDiDescrizione_s',
    'options' => 
    array (
      '' => 'Record radice',
      '*' => 'Tutti',
      'coplesso-di-fondi' => 'Complesso di fondi',
      'superfondo' => 'Superfondo',
      'fondo' => 'Fondo',
      'sub-fondo' => 'Sub-fondo',
      'sezione' => 'Sezione',
      'serie' => 'Serie',
      'sottoserie' => 'Sottoserie',
      'sottosottoserie' => 'Sottosottoserie',
      'collezione-raccolta' => 'Collezione / raccolta',
      'unita' => 'Unità',
      'sottounita' => 'Sottounità',
      'sottosottounita' => 'Sottosottounità',
      'documento-principale' => 'Documento principale',
      'unita-documentaria' => 'Unità documentaria',
    ),
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'ID',
    'field' => 'identificativo_s',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Tipologia',
    'field' => 'tipo_s',
  ),
  array (
    'type' => 'checkbox',
    'label' => 'Digitale',
    'field' => 'digitale_i',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Denominazione',
    'field' => 'denominazione_s',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Produttore',
    'field' => 'produttori_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Complesso d"appartenenza',
    'field' => 'complessoAppartenenza_s',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Autore/responsabile',
    'field' => 'autoreResponsabile_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Ruolo',
    'field' => 'ruolo_ss',
  ),
  array (
    'type' => 'date',
    'label' => 'Cronologia/Date',
    'field' => 'estremoRemoto_s,estremoRecente_s',
  ),
  array (
    'type' => 'dateCentury',
    'label' => 'Cronologia/Secoli',
    'field' => 'estremoRemotoSecolo_i,estremoRecenteSecolo_i',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Descrizione',
    'field' => 'descrizione_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Luogo',
    'field' => 'luogo_s',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Lingua',
    'field' => 'lingua_s',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Antroponimi',
    'field' => 'antroponimi_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Enti',
    'field' => 'enti_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Toponimi',
    'field' => 'toponimi_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Redattore',
    'field' => 'redattore_ss',
  ),
  array (
    'type' => 'autocomplete',
    'label' => 'Azione',
    'field' => 'azione_ss',
  ),
);
        return $searchFields;
    }

    public function getRecordId()
    {
      return $this->_denominazione;
    }
    ]]></model:Script>

    <model:Query name="mysql_getByIndexedInt">
        <![CDATA[
        SELECT
          `doc`.*,
          `doc_detail`.*
        FROM
          `documents_tbl` `doc`
          JOIN `documents_detail_tbl` `doc_detail` ON (
            `doc`.`document_id` = `doc_detail`.`document_detail_FK_document_id`
          )
          AND (
            `doc_detail`.`document_detail_status` = 'PUBLISHED' OR
            `doc_detail`.`document_detail_status` = 'DRAFT'
          )
          AND (
            `doc_detail`.`document_detail_FK_language_id` = :languageId
          )
          LEFT JOIN `documents_index_int_tbl` `index0` ON (
            `doc_detail`.`document_detail_id` = `index0`.`document_index_int_FK_document_detail_id`
          )
          AND (
            `index0`.`document_index_int_name` = :intName
          )
        WHERE
          (
            `index0`.`document_index_int_value` = :intVal
          )
        GROUP BY `doc`.`document_id`
        ORDER BY `doc_detail`.`document_detail_FK_document_id` DESC
    ]]>
    </model:Query>

    <model:Query name="mysql_getByIndexedText">
        <![CDATA[
        SELECT
          `doc`.*,
          `doc_detail`.*
        FROM
          `documents_tbl` `doc`
          JOIN `documents_detail_tbl` `doc_detail` ON (
            `doc`.`document_id` = `doc_detail`.`document_detail_FK_document_id`
          )
          AND (
            `doc_detail`.`document_detail_status` = 'PUBLISHED' OR
            `doc_detail`.`document_detail_status` = 'DRAFT'
          )
          AND (
            `doc_detail`.`document_detail_FK_language_id` = :languageId
          )
          LEFT JOIN `documents_index_text_tbl` `index0` ON (
            `doc_detail`.`document_detail_id` = `index0`.`document_index_text_FK_document_detail_id`
          )
          AND (
            `index0`.`document_index_text_name` = :textName
          )
        WHERE
          (
            `index0`.`document_index_text_value` = :textVal
          )
        GROUP BY `doc`.`document_id`
        ORDER BY `doc_detail`.`document_detail_FK_document_id` DESC
    ]]>
    </model:Query>

    <model:Query name="mysql_getByDocumentId">
        <![CDATA[
        SELECT
          `doc`.*,
          `doc_detail`.*
        FROM
          `documents_tbl` `doc`
          JOIN `documents_detail_tbl` `doc_detail` ON (
            `doc_detail`.`document_detail_FK_document_id` = :docId
          )
          AND (
            `doc_detail`.`document_detail_status` = 'PUBLISHED' OR
            `doc_detail`.`document_detail_status` = 'DRAFT'
          )
          AND (
            `doc_detail`.`document_detail_FK_language_id` = :languageId
          )
        GROUP BY `doc`.`document_id`
        ORDER BY `doc_detail`.`document_detail_FK_document_id` DESC
    ]]>
    </model:Query>
</model:Model>
