<?php

class metafad_common_importer_operations_ResolveMAG extends metafad_common_importer_operations_LinkedToRunner
{

    /**
     * Si aspetta:
     * @param stdClass $params
     * @param metafad_common_importer_MainRunner $runnerRef
     */
    public function __construct(stdClass $params, metafad_common_importer_MainRunner $runnerRef)
    {
        parent::__construct($params, $runnerRef);
    }

    /**
     * Riceve:
     * data = dati in formato finale (precedente al salvataggio)
     *
     * @param stdClass $input
     * @return stdClass come l'input, ma con data modificato
     * @throws Exception se il file non esiste
     */
    public function execute($input)
    {
        $data = $input->data;

        $input->data = $this->fillPlaceholder($data);

        return $input;
    }

    public function validateInput($input)
    {
        // TODO: Change the autogenerated stub
    }

    /**
     * @param $in
     * @return mixed
     */
    private function fillPlaceholder($in){
        if (is_a($in, "metafad_common_importer_utilities_MAGPlaceholder")){
            return $this->setLinkMag($in->identifier);
        } else if (is_a($in, "stdClass")) {
            foreach($in as $k => $v){
                $in->{$k} = $this->fillPlaceholder($v);
            }
        } else if (is_array($in)){
            foreach($in as $k => $v){
                $in[$k] = $this->fillPlaceholder($v);
            }
        }
        return $in;
    }


    /**
     * Salvataggio immagini nel DAM
     *
     * @param metafad_common_importer_utilities_MAGPlaceholder $mag Percorso e nome dell'immagine
     *
     * @return string
     */
    private function setLinkMag($mag)
    {
        $identifier = $mag->identifier;

        $ar = __ObjectFactory::createModelIterator("metafad.teca.MAG.models.Model")
            ->where("BIB_dc_identifier_index", $identifier)
            ->first();

        if ($ar && $ar->getId()) {
            $linkedStru = new stdClass();

            $linkedStru->id = $ar->linkedStru->id;
            $linkedStru->text = current($ar->BIB_dc_title)->BIB_dc_title_value;

            return $linkedStru;
        } else {
            return null;
        }
    }

}