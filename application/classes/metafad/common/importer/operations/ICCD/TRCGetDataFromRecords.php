<?php

/**
 * Created by PhpStorm.
 * User: marco
 * Date: 28/11/16
 * Time: 12.17
 */
class metafad_common_importer_operations_ICCD_TRCGetDataFromRecords extends metafad_common_importer_operations_LinkedToRunner
{
    protected
        $params;

    /**
     * Si aspetta:
     * type (facoltativo, priorità 1) = tipo di scheda (AUT, BIB esempio)
     * version (facoltativo, priorità 1) = versione del tipo di scheda (300 o 400 esempio)
     * modulename (facoltativo, priorità 2) = nome del modulo, se non specificato concatena i due sopra
     * schemapath (facoltativo, priorità 3) = json di definizione della mappatura
     * metafad_common_importer_operations_ICCD_TRCGetDataFromRecords constructor.
     * @param stdClass $params
     * @param metafad_common_importer_MainRunner $runnerRef
     */
    public function __construct(stdClass $params, metafad_common_importer_MainRunner $runnerRef)
    {
        $this->params = $params;

        parent::__construct($params, $runnerRef);
    }

    /**
     * Riceve in input:
     * argset = array di blocchi k:v che rappresentano le schede (cioè, array di array di stringhe, un array a scheda)
     * questo blocco è contenuto nella proprietà "data"
     * Restituisce:
     * argset = array di dati in formato finale (precedente al salvataggio)
     * (argset contiene degli stdClass che a loro volta contengono in "data" il dato in formato finale)
     * @param stdClass $input
     * @return stdClass (argset contiene i record in formato finale)
     * @throws Exception se il file non esiste
     */
    public function execute($input)
    {
        $results = $input->argset;

        $out = array();

        /**
         * @var $singleOp metafad_common_importer_operations_ICCD_TRCToStdClass
         */
        $singleOp = __ObjectFactory::createObject('metafad_common_importer_operations_ICCD_TRCToStdClass', $this->params, $this->runner);

        foreach ($results as $result) {
            $in = $result;
            $out[] = $singleOp->execute($in);
        }

        return (object)array("argset" => $out);
    }

    public function validateInput($input)
    {
        // TODO: Change the autogenerated stub
    }
}